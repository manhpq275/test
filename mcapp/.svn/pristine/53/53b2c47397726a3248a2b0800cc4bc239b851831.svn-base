package asia.ienter.matching.views.activities;

import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.content.Context;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.support.v4.content.ContextCompat;
import android.view.View;
import android.widget.LinearLayout;
import android.widget.TextView;

import asia.ienter.matching.R;
import asia.ienter.matching.interfaces.ITopActionBarCallback;
import asia.ienter.matching.utils.MLog;
import asia.ienter.matching.utils.ReplaceFragment;
import asia.ienter.matching.views.fragments.BaseFragment;
import asia.ienter.matching.views.fragments.MessagesFragment;
import asia.ienter.matching.views.fragments.NearByFragment;
import asia.ienter.matching.views.fragments.ProfileFragment;
import asia.ienter.matching.views.fragments.TopFragment;
import butterknife.ButterKnife;
import butterknife.InjectView;
import butterknife.OnClick;

/**
 * Created by phamquangmanh on 9/15/16.
 */
public class HomeActivity extends FragmentActivity {

    private static final String TAG = "HomeActivity";

    private int mTabSelect;
    private FragmentManager fragmentManager;
    private BaseFragment fragment;
    private boolean isShowMenu =true;
    Context context;
    @InjectView(R.id.menuBar)   LinearLayout lnMenuBar;
    @InjectView(R.id.tabMatching)   TextView tabMatching;
    @InjectView(R.id.tabNearBy)   TextView tabNearBy;
    @InjectView(R.id.tabMessage)   TextView tabMessage;
    @InjectView(R.id.tabProfile)   TextView tabProfile;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        setContentView(R.layout.activity_home);
        ButterKnife.inject(this);
        initView();

        initService();

        getBundleData();

        changeTab(0);
    }

    @Override
    public void onBackPressed() {
        Fragment f = getSupportFragmentManager().findFragmentById(R.id.home_content_fragment);
        if (f instanceof MessagesFragment || f instanceof ProfileFragment) {
            super.onBackPressed();
        } else if (f instanceof TopFragment) {
            finish();
        } else {
            super.onBackPressed();
        }
    }

    private void initService() {
    }

    private void initView() {
        this.context = this;

    }

    public void getBundleData() {
    }

    public void showMenu(){
        if(lnMenuBar==null) return;
        if(isShowMenu) return;
        lnMenuBar.animate()
                .setDuration(300)
                .translationY(0)
                .setListener(new AnimatorListenerAdapter() {
                    @Override
                    public void onAnimationStart(Animator animation) {
                        super.onAnimationStart(animation);
                        lnMenuBar.setVisibility(View.VISIBLE);

                    }
                });
        isShowMenu = true;
    }

    public void hideMenu(){
        if(lnMenuBar==null) {
            MLog.e(TAG,"Menubar Null");
            return;
        }
        if(!isShowMenu) return;
        lnMenuBar.animate()
                .setDuration(300)
                .translationY(200)
                .setListener(new AnimatorListenerAdapter() {
                    @Override
                    public void onAnimationStart(Animator animation) {
                        super.onAnimationStart(animation);
                        lnMenuBar.setVisibility(View.VISIBLE);

                    }
                });
        isShowMenu = false;
    }

    public void changeTab(int position) {
        mTabSelect = position;
        changBackgroundTab(mTabSelect);
        fragmentManager = getSupportFragmentManager();
        ReplaceFragment replaceFragment = new ReplaceFragment();
        MLog.d(TAG,"changeTab()");
        switch (position) {
            case 0:
                fragment = new TopFragment();
                replaceFragment.replace(fragmentManager, fragment, R.id.home_content_fragment);
                break;
            case 1:
                fragment = new NearByFragment();
                replaceFragment.replace(fragmentManager, fragment, R.id.home_content_fragment);
                break;
            case 2:
                fragment =  new MessagesFragment();
                replaceFragment.replace(fragmentManager,fragment, R.id.home_content_fragment);
                break;
            case 3:
                fragment =  new ProfileFragment();
                replaceFragment.replace(fragmentManager, fragment, R.id.home_content_fragment);
                break;
        }
    }

    private void changBackgroundTab(int mTabSelect) {
        switch (mTabSelect) {
            case 0:
                setTabActive(tabMatching,true);
                setTabActive(tabNearBy,false);
                setTabActive(tabMessage,false);
                setTabActive(tabProfile,false);
                break;
            case 1:
                setTabActive(tabMatching,false);
                setTabActive(tabNearBy,true);
                setTabActive(tabMessage,false);
                setTabActive(tabProfile,false);
                break;
            case 2:
                setTabActive(tabMatching,false);
                setTabActive(tabNearBy,false);
                setTabActive(tabMessage,true);
                setTabActive(tabProfile,false);
                break;
            case 3:
                setTabActive(tabMatching,false);
                setTabActive(tabNearBy,false);
                setTabActive(tabMessage,false);
                setTabActive(tabProfile,true);
                break;
        }
    }

    private void setTabActive(TextView tab,boolean isActive){
        if(isActive){
            tab.setTextColor(ContextCompat.getColor(context, R.color.text_color_menu_active));
        }else{
            tab.setTextColor(ContextCompat.getColor(context, R.color.text_color_menu_no_active));
        }
    }

    @OnClick(R.id.changeTopView)
    public void onClickChangeTopView(){
        MLog.e(TAG,"change view Onclick");
        if (fragment==null) return;
        ((TopFragment)fragment).onChangeTopViewCallback();
    }

    @OnClick(R.id.advanceTopView)
    public void onClickAdvanceSearchTopView(){
        if (fragment==null) return;
        ((TopFragment)fragment).onAdvanceSearchTopView();
    }

    @OnClick(R.id.tabMatching)
    public void onClickTabMatching(){
        MLog.e(TAG,"change tab MAtching");
        changeTab(0);
    }

    @OnClick(R.id.tabNearBy)
    public void onClickTabNearBy(){
        MLog.e(TAG,"change tab NearBy");
        changeTab(1);
    }

    @OnClick(R.id.tabMessage)
    public void onClickTabMessages(){
        MLog.e(TAG,"change tab Messages");
        changeTab(2);
    }

    @OnClick(R.id.tabProfile)
    public void onClickTabProfile(){
        MLog.e(TAG,"change tab Profile");
        changeTab(3);
    }
}
